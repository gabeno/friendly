# build stage
FROM python:3.8.3-alpine as builder

WORKDIR /usr/src/friendly

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

RUN apk update && apk add postgresql-dev gcc python3-dev musl-dev libffi-dev

RUN pip install --upgrade pip
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/friendly/wheels -r requirements.txt

# build
FROM python:3.8.3-alpine

RUN mkdir -p /home/app

RUN addgroup -S app && adduser -S app -G app

ENV HOME=/home/app
ENV APP_HOME=/home/app/api
RUN mkdir $APP_HOME
WORKDIR $APP_HOME

RUN apk update && apk add libpq libffi-dev openssl-dev cargo
COPY --from=builder /usr/src/friendly/wheels /wheels
COPY --from=builder /usr/src/friendly/requirements.txt .
RUN pip install --no-cache /wheels/*

COPY ./entrypoint.sh .
RUN sed -i 's/\r$//g'  $APP_HOME/entrypoint.sh
RUN chmod +x  $APP_HOME/entrypoint.sh

COPY ./friendly $APP_HOME

RUN chown -R app:app $APP_HOME

ENTRYPOINT ["/home/app/api/entrypoint.sh"]
